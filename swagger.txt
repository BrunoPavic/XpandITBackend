openapi: 3.0.1
info:
  title: Xpand challenge - MoviesAPI
  description: API documentation for Xpand challenge
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /app/movies:
    get:
      tags:
        - movie-controller
      operationId: getMovies
      parameters:
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: start
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: end
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageMovieDto'
    put:
      tags:
        - movie-controller
      operationId: updateMovie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMovieDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MovieDetailsDto'
    post:
      tags:
        - movie-controller
      operationId: saveMovie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMovieDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MovieDetailsDto'
  /app/movies/{id}:
    get:
      tags:
        - movie-controller
      operationId: getMovieById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MovieDetailsDto'
    delete:
      tags:
        - movie-controller
      operationId: deleteMovie
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /app/movies/top-movies:
    get:
      tags:
        - movie-controller
      operationId: getTopMovies
      parameters:
        - name: pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: year
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageMovieDto'
components:
  schemas:
    ActorDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        fullName:
          type: string
    DirectorDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        fullName:
          type: string
    GenreDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    UpdateMovieDto:
      required:
        - date
        - id
        - rating
        - revenue
        - title
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        date:
          type: string
          format: date
        rating:
          type: number
        revenue:
          type: number
        genres:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/GenreDto'
        actors:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ActorDto'
        director:
          $ref: '#/components/schemas/DirectorDto'
        runtime:
          type: integer
          format: int32
        votes:
          type: integer
          format: int32
        description:
          type: string
    MovieDetailsDto:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        date:
          type: string
          format: date
        rating:
          type: number
        revenue:
          type: number
        genres:
          type: array
          items:
            $ref: '#/components/schemas/GenreDto'
        actors:
          type: array
          items:
            $ref: '#/components/schemas/ActorDto'
        director:
          $ref: '#/components/schemas/DirectorDto'
        runtime:
          type: integer
          format: int32
        votes:
          type: integer
          format: int32
        description:
          type: string
    NewMovieDto:
      required:
        - date
        - rating
        - revenue
        - title
      type: object
      properties:
        title:
          type: string
        date:
          type: string
          format: date
        rating:
          type: number
        revenue:
          type: number
        genres:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        actors:
          uniqueItems: true
          type: array
          items:
            type: integer
            format: int32
        director:
          type: integer
          format: int32
        runtime:
          type: integer
          format: int32
        votes:
          type: integer
          format: int32
        description:
          type: string
    MovieDto:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        date:
          type: string
          format: date
        rating:
          type: number
        revenue:
          type: number
    PageMovieDto:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/MovieDto'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/SortObject'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
        offset:
          type: integer
          format: int64
    SortObject:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
